name: Build and Release

on: push

jobs:
  build_docker_image:
    name: Build Docker Image
    runs-on:
      - self-hosted
      - zendesk-stable
    env:
      ARTIFACTORY_USERNAME: "${{ secrets.ARTIFACTORY_USERNAME }}"
      ARTIFACTORY_API_KEY: "${{ secrets.ARTIFACTORY_API_KEY }}"
    steps:
      - uses: zendesk/checkout@v2

      - uses: zendesk/setup-java@v1
        with:
          java-version: '11'

      - uses: zendesk/cache@v2
        with:
          path: |
            ~/.gradle/wrapper/
            ~/.gradle/caches/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle/{caches,wrapper}*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build app
        run: ./gradlew shadowjar -x check -x test --console=plain

      - name: Build docker images
        run: |
          set -ex

          BRANCH_TAG="$(echo "${GITHUB_HEAD_REF:-$GITHUB_REF}" | sed -e 's/refs\/heads\///' | sed -e 's/\//-/g')"

          # This is an ugly hack because the FROM directive isn't using auth correctly
          docker pull gcr.io/docker-images-180022/base/openjdk:11-ubuntu &
          (docker pull gcr.io/docker-images-180022/apps/kafka-test:latest || true) &
          (docker pull gcr.io/docker-images-180022/apps/kafka-test:$BRANCH_TAG || true) &
          wait

          docker build \
            --build-arg=REVISION=$GITHUB_SHA \
            --cache-from=gcr.io/docker-images-180022/apps/kafka-test:latest \
            --cache-from=gcr.io/docker-images-180022/apps/kafka-test:$BRANCH_TAG \
            --tag=gcr.io/docker-images-180022/apps/kafka-test:$GITHUB_SHA \
            --tag=gcr.io/docker-images-180022/apps/kafka-test:$BRANCH_TAG \
            --file=Dockerfile \
            .

          docker push gcr.io/docker-images-180022/apps/kafka-test:$GITHUB_SHA
          docker push gcr.io/docker-images-180022/apps/kafka-test:$BRANCH_TAG

          if [ "${GITHUB_HEAD_REF:-$GITHUB_REF}" = "refs/heads/main" ]; then
            docker tag \
              gcr.io/docker-images-180022/apps/kafka-test:$GITHUB_SHA \
              gcr.io/docker-images-180022/apps/kafka-test:latest
            docker push gcr.io/docker-images-180022/apps/kafka-test:latest
          fi
